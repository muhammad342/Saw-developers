{"ast":null,"code":"import axios from \"axios\";\nimport { PROJECT_ADD_REQUEST, PROJECT_ADD_SUCCESS, PROJECT_ADD_FAIL, PROJECT_ALL_REQUEST, PROJECT_ALL_SUCCESS, PROJECT_ALL_FAIL } from \"../Constant/projectConstant\";\nexport const uploadProject = formData => async dispatch => {\n  try {\n    dispatch({\n      type: PROJECT_ADD_REQUEST\n    });\n    const {\n      data\n    } = await axios.post(\"/project/addProject\", formData);\n    dispatch({\n      type: PROJECT_ADD_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PROJECT_ADD_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const displayAllProject = () => async dispatch => {\n  try {\n    dispatch({\n      type: PROJECT_ALL_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(\"/project/allProject\");\n    dispatch({\n      type: PROJECT_ALL_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PROJECT_ALL_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const deleteProject = id => async dispatch => {\n  try {\n    dispatch({\n      type: USER_REMOVE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.delete(`/user/${id}`, config);\n    dispatch({\n      type: USER_REMOVE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_REMOVE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.response\n    });\n  }\n};","map":{"version":3,"sources":["D:/Saw developer/Saw developers/frontend/src/Action/projectActions.js"],"names":["axios","PROJECT_ADD_REQUEST","PROJECT_ADD_SUCCESS","PROJECT_ADD_FAIL","PROJECT_ALL_REQUEST","PROJECT_ALL_SUCCESS","PROJECT_ALL_FAIL","uploadProject","formData","dispatch","type","data","post","payload","error","response","message","displayAllProject","get","deleteProject","id","USER_REMOVE_REQUEST","userLogin","userInfo","getState","config","headers","Authorization","token","delete","USER_REMOVE_SUCCESS","USER_REMOVE_FAIL"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,mBADF,EAEEC,mBAFF,EAGEC,gBAHF,EAIEC,mBAJF,EAKEC,mBALF,EAMEC,gBANF,QAOO,6BAPP;AAQA,OAAO,MAAMC,aAAa,GAAIC,QAAD,IAAc,MAAOC,QAAP,IAAoB;AAC7D,MAAI;AACFA,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAET;AADC,KAAD,CAAR;AAIA,UAAM;AAAEU,MAAAA;AAAF,QAAW,MAAMX,KAAK,CAACY,IAAN,CAAW,qBAAX,EAAkCJ,QAAlC,CAAvB;AAEAC,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAER,mBADC;AAEPW,MAAAA,OAAO,EAAEF;AAFF,KAAD,CAAR;AAID,GAXD,CAWE,OAAOG,KAAP,EAAc;AACdL,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEP,gBADC;AAEPU,MAAAA,OAAO,EACLC,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeJ,IAAf,CAAoBK,OAAtC,GACIF,KAAK,CAACC,QAAN,CAAeJ,IAAf,CAAoBK,OADxB,GAEIF,KAAK,CAACE;AALL,KAAD,CAAR;AAOD;AACF,CArBM;AAuBP,OAAO,MAAMC,iBAAiB,GAAG,MAAM,MAAOR,QAAP,IAAoB;AACzD,MAAI;AACFA,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEN;AADC,KAAD,CAAR;AAIA,UAAM;AAAEO,MAAAA;AAAF,QAAW,MAAMX,KAAK,CAACkB,GAAN,CAAU,qBAAV,CAAvB;AAEAT,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEL,mBADC;AAEPQ,MAAAA,OAAO,EAAEF;AAFF,KAAD,CAAR;AAID,GAXD,CAWE,OAAOG,KAAP,EAAc;AACdL,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEJ,gBADC;AAEPO,MAAAA,OAAO,EACLC,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeJ,IAAf,CAAoBK,OAAtC,GACIF,KAAK,CAACC,QAAN,CAAeJ,IAAf,CAAoBK,OADxB,GAEIF,KAAK,CAACE;AALL,KAAD,CAAR;AAOD;AACF,CArBM;AAuBP,OAAO,MAAMG,aAAa,GAAIC,EAAD,IAAQ,MAAOX,QAAP,IAAoB;AACvD,MAAI;AACFA,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEW;AAAR,KAAD,CAAR;AACA,UAAM;AACJC,MAAAA,SAAS,EAAE;AAAEC,QAAAA;AAAF;AADP,QAEFC,QAAQ,EAFZ;AAIA,UAAMC,MAAM,GAAG;AACbC,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT;AAEPC,QAAAA,aAAa,EAAG,UAASJ,QAAQ,CAACK,KAAM;AAFjC;AADI,KAAf;AAMA,UAAM;AAAEjB,MAAAA;AAAF,QAAW,MAAMX,KAAK,CAAC6B,MAAN,CAAc,SAAQT,EAAG,EAAzB,EAA4BK,MAA5B,CAAvB;AACAhB,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEoB,mBAAR;AAA6BjB,MAAAA,OAAO,EAAEF;AAAtC,KAAD,CAAR;AACD,GAdD,CAcE,OAAOG,KAAP,EAAc;AACdL,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEqB,gBADC;AAEPlB,MAAAA,OAAO,EACLC,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeJ,IAAf,CAAoBK,OAAtC,GACIF,KAAK,CAACC,QAAN,CAAeJ,IAAf,CAAoBK,OADxB,GAEIF,KAAK,CAACC;AALL,KAAD,CAAR;AAOD;AACF,CAxBM","sourcesContent":["import axios from \"axios\";\r\nimport {\r\n  PROJECT_ADD_REQUEST,\r\n  PROJECT_ADD_SUCCESS,\r\n  PROJECT_ADD_FAIL,\r\n  PROJECT_ALL_REQUEST,\r\n  PROJECT_ALL_SUCCESS,\r\n  PROJECT_ALL_FAIL,\r\n} from \"../Constant/projectConstant\";\r\nexport const uploadProject = (formData) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: PROJECT_ADD_REQUEST,\r\n    });\r\n\r\n    const { data } = await axios.post(\"/project/addProject\", formData);\r\n\r\n    dispatch({\r\n      type: PROJECT_ADD_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PROJECT_ADD_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const displayAllProject = () => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: PROJECT_ALL_REQUEST,\r\n    });\r\n\r\n    const { data } = await axios.get(\"/project/allProject\");\r\n\r\n    dispatch({\r\n      type: PROJECT_ALL_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PROJECT_ALL_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const deleteProject = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: USER_REMOVE_REQUEST });\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n    const { data } = await axios.delete(`/user/${id}`, config);\r\n    dispatch({ type: USER_REMOVE_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_REMOVE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.response,\r\n    });\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}