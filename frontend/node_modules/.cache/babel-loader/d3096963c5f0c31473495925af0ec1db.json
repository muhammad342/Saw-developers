{"ast":null,"code":"import axios from \"axios\";\nimport { PROJECT_ADD_REQUEST, PROJECT_ADD_SUCCESS, PROJECT_ADD_FAIL } from \"../Constant/projectConstant\";\nexport const uploadProject = formData => async dispatch => {\n  try {\n    dispatch({\n      type: PROJECT_ADD_REQUEST\n    });\n    const {\n      data\n    } = await axios.post(\"/project/dashboard/addProject\", formData);\n    dispatch({\n      type: PROJECT_ADD_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PROJECT_ADD_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};","map":{"version":3,"sources":["D:/Saw developer/Saw developers/frontend/src/Action/projectActions.js"],"names":["axios","PROJECT_ADD_REQUEST","PROJECT_ADD_SUCCESS","PROJECT_ADD_FAIL","uploadProject","formData","dispatch","type","data","post","payload","error","response","message"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,mBADF,EAEEC,mBAFF,EAGEC,gBAHF,QAIO,6BAJP;AAKA,OAAO,MAAMC,aAAa,GAAIC,QAAD,IAAc,MAAOC,QAAP,IAAoB;AAC7D,MAAI;AACFA,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEN;AADC,KAAD,CAAR;AAIA,UAAM;AAAEO,MAAAA;AAAF,QAAW,MAAMR,KAAK,CAACS,IAAN,CACrB,+BADqB,EAErBJ,QAFqB,CAAvB;AAKAC,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEL,mBADC;AAEPQ,MAAAA,OAAO,EAAEF;AAFF,KAAD,CAAR;AAID,GAdD,CAcE,OAAOG,KAAP,EAAc;AACdL,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEJ,gBADC;AAEPO,MAAAA,OAAO,EACLC,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeJ,IAAf,CAAoBK,OAAtC,GACIF,KAAK,CAACC,QAAN,CAAeJ,IAAf,CAAoBK,OADxB,GAEIF,KAAK,CAACE;AALL,KAAD,CAAR;AAOD;AACF,CAxBM","sourcesContent":["import axios from \"axios\";\r\nimport {\r\n  PROJECT_ADD_REQUEST,\r\n  PROJECT_ADD_SUCCESS,\r\n  PROJECT_ADD_FAIL,\r\n} from \"../Constant/projectConstant\";\r\nexport const uploadProject = (formData) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: PROJECT_ADD_REQUEST,\r\n    });\r\n\r\n    const { data } = await axios.post(\r\n      \"/project/dashboard/addProject\",\r\n      formData\r\n    );\r\n\r\n    dispatch({\r\n      type: PROJECT_ADD_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PROJECT_ADD_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}